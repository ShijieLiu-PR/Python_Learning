1. 深拷贝和浅拷贝
    浅拷贝：是在复制过程中，只复制一层变量，不会复制深层变量绑定的对象。
    深拷贝：复制整个依赖变量。

2. 列表推导式
    定义：使用简易的方法，将可迭代对象转换为列表。
    语法：
        变量=[表达式 for 变量 in 可迭代对象]
        变量=[表达式 for 变量 in 可迭代对象 if 条件]

# 练习1：使用range生成1--10之间的数字，存入list01中，
#       使用列表推导式，将list01中所有奇数存入到list02，
#       将所有偶数存入到list03中，将大于3的存入到list04中

3. 元组tuple
    由一系列变量组成的不可变序列容器。
    不可变是指一旦创建，不可以再添加或者删除元素。
    如果元组只有一个元素，必须多写一个逗号，否则视为普通对象，而不是元组。例如 t04 =(1,)
    变量交换的本质是创建元组：x，y = y，x
    格式化字符串的本质是创建元组：“姓名%s，年龄%d”%(qtx,23)
4. 列表的扩容原理
    a.创建新列表（更大的列表）
    b.拷贝原有元素
    c.替换列表地址

# 练习2：根据月份计算天数。
# 练习3：在控制台中输入月和日，计算这是一年的第一天。

5. 字典
    定义：由一系列键值对组成的可变映射容器。
    映射：通过键获取值（字符串/列表/元组通过索引），键必须唯一且不可变，值没有限制。
        向字典存入新数据，都要对key进行哈希运算。
        从字典取出数据，同样也需要对key进行哈希元素，快速定位key的位置。
    创建：{键1：值1，键2：值2} dict（可迭代对象）
    添加/修改元素：
        语法：字典[键] = 数据
        说明：键不存在，创建键，并绑定对应的值。
            键存在，则修改绑定的值。
    获取元素：v=字典[键]    #没有键则报错
    删除元素：del 字典[键]

# 练习4：在控制台中输入季度，打印该季度的月份。
# 练习5：在控制台中录入一个字符串，打印这个字符串中的字符以及出现的次数。

6. 字典推导式

# 练习6：将["张三丰","无忌","赵敏"]的字符串长度统计到字典中，如：{"张三丰":3,"无忌":2,"赵敏":2}
# 练习7：["张三丰","无忌","赵敏"]
# [101,102,103]
# （1）根据两个列表形成一个字典：key姓名，value房间号
# （2）将字典的键与值进行翻转，即：key房间号，value姓名

day05作业：
1. 三合一
2. 当天练习独立完成
3. 内存图：list01 = ["a",(1,2,3),{"b":"B","c":"C"}]，
list02 = list01，
list03 = list01[:]，
list02[0] = "b"
print(list01[0])

list02[2]["b"] = "BB"
print(list02[2]["b"] # ?
list03[0] = "bb"
print(list01[0]) # ?

4.在控制台中录入5个学生信息（姓名/年龄/性别），用什么数据结果保存比较好？
    推荐：列表中嵌套字典
    [
       {
         "name":xx,
         "age":xx,
         "sex":xx,
       }
       ...
    ]
5.扩展练习：
    猜拳
    规则：系统随机出拳，在控制台中循环猜测
    提示：将胜利的策略存入容器
    （
        （"石头","剪刀"），
        （“剪刀”，“布”）,
        （“布”，“石头”）
    ）
    将用户猜的拳与系统出的拳形成一个元组

6.群讨论：
    讨论 == is 的区别。
    讨论列表中的元素如何根据条件批量删除，例如删除列表中[1,2,3,4,5,0,6,7]大于3的数。