继承
    定义：
        1.重用现有类的功能与概念，并在此基础上进行扩展。
        2.说明：
            --子类直接具有父类的成员（共性），还可以扩展新功能。
            --事务具有一定的层次、渊源，继承可以统一概念。
            例如：公司组织架构

    优点：
        1.一种代码复用的方式。
        2.以层次化的方式管理类。


    缺点：
        耦合度高

    作用：
        隔离客户端代码与功能的实现方式。


多态
    定义：父类的同一动作或者行为，在不同的子类上有不同的实现。

面向对象的设计原则：
    1.开闭原则
    2.类的单一职责：一个类有且只有一个改变它的原因
    3.依赖倒置（依赖抽象）
        客户端代码（调用的类）
    4.组合复用
        如果仅仅为了代码复用，优先选择组合复用，而非继承复用。
        组合的耦合性相对继承低。
    5.里氏替换（继承后的重写，指导继承的设计）
        父类出现的地方可以被子类替换，在替换后仍然保持原有功能。
        子类要拥有父类的所有功能。
        子类在重写父类方法时，尽量选择扩展重写，防止改变原有功能。
    6.迪米特法则（类与类交互的原则）
        不要和陌生人说话。
        类与类交互时，在满足功能要求的基础上，传递的数据量越少越好。
        迪米特法则实际上就是低耦合。

类与类之间的关系：
泛化：子类与父类的关系，概念的复用，耦合度高；
    B类繁华A类，意味着B类是A类的一种；
    做法：B类继承A类

关联（聚合/组合）：部分与整体的关系，功能的复用，变化影响一个类
    A与B关联，意味着B是A的一部分；
    做法：在A类中包含B类型成员。

依赖：合作关系，一种相对松散的协作，变化影响一个方法；
    A类依赖B类，意味A类的某些功能靠B类实现；
    做法：B类型作为A类中方法的参数，并不是A的成员。


内置可重写函数
    python中，以双下划线开头、双下划线结尾的是系统定义的成员。我们可以进行重写，从而可以改变其行为。
    __str__ 将对象转换为字符串（对人友好）
    __repr__ 给解释看的，可以用来克隆一个对象（解释器可识别）。

练习1：重写StudentModel类 __str__方法与__repr__方法。

运算符重载
    定义：让自定义的类生成的对象（实例）能够使用运算符进行操作。

练习2：实现向量类于整数做减法和乘法运算
反向运算符重载
复合运算符重载

day12作业：
1.画出天龙八部3D游戏技能系统设计图
    可以考虑每个技能做成一个类

2.面向对象课程答辩。
